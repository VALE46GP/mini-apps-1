const mysql = require('mysql');
const connection = mysql.createConnection({
  host: 'localhost',
  user: 'root',
  database: 'customer_data'
});

// write function to add customer_info
var insertCustomer = function (first_name, last_name, email, pw, callback) {
  const query = 'INSERT INTO customer_info (first_name, last_name, email, pw) VALUES (?, ?, ?, ?)';
  connection.query(query, [first_name, last_name, email, pw], (err, results, fields) => {
    callback(err, null);
  });
};

// write function to add shipping_info
var insertShipping = function (id, line1, line2, city, state, zip) {
  const query = 'INSERT INTO customer_info (id, line1, line2, city, state, zip) VALUES (?, ?, ?, ?, ?, ?)';
  connection.query(query, [id, line1, line2, city, state, zip], (err, results, fields) => {
    callback(err, null);
  });
};

// write function to add payment_info
var insertPayment = function (id, card_number, expiration, cvv, zip) {
  const query = 'INSERT INTO customer_info (id, card_number, expiration, cvv, zip) VALUES (?, ?, ?, ?, ?)';
  connection.query(query, [id, card_number, expiration, cvv, zip], (err, results, fields) => {
    callback(err, null);
  });
};

// export all functions
module.exports.insertCustomer = insertCustomer;
module.exports.insertShipping = insertShipping;
module.exports.insertPayment = insertPayment;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2RhdGFiYXNlL2luZGV4LmpzIl0sIm5hbWVzIjpbIm15c3FsIiwicmVxdWlyZSIsImNvbm5lY3Rpb24iLCJjcmVhdGVDb25uZWN0aW9uIiwiaG9zdCIsInVzZXIiLCJkYXRhYmFzZSIsImluc2VydEN1c3RvbWVyIiwiZmlyc3RfbmFtZSIsImxhc3RfbmFtZSIsImVtYWlsIiwicHciLCJjYWxsYmFjayIsInF1ZXJ5IiwiZXJyIiwicmVzdWx0cyIsImZpZWxkcyIsImluc2VydFNoaXBwaW5nIiwiaWQiLCJsaW5lMSIsImxpbmUyIiwiY2l0eSIsInN0YXRlIiwiemlwIiwiaW5zZXJ0UGF5bWVudCIsImNhcmRfbnVtYmVyIiwiZXhwaXJhdGlvbiIsImN2diIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFFBQVFDLFFBQVEsT0FBUixDQUFkO0FBQ0EsTUFBTUMsYUFBYUYsTUFBTUcsZ0JBQU4sQ0FBdUI7QUFDeENDLFFBQU0sV0FEa0M7QUFFeENDLFFBQU0sTUFGa0M7QUFHeENDLFlBQVU7QUFIOEIsQ0FBdkIsQ0FBbkI7O0FBTUE7QUFDQSxJQUFJQyxpQkFBaUIsVUFBU0MsVUFBVCxFQUFxQkMsU0FBckIsRUFBZ0NDLEtBQWhDLEVBQXVDQyxFQUF2QyxFQUEyQ0MsUUFBM0MsRUFBcUQ7QUFDeEUsUUFBTUMsUUFBUSxrRkFBZDtBQUNBWCxhQUFXVyxLQUFYLENBQWlCQSxLQUFqQixFQUF3QixDQUFDTCxVQUFELEVBQWFDLFNBQWIsRUFBd0JDLEtBQXhCLEVBQStCQyxFQUEvQixDQUF4QixFQUE0RCxDQUFDRyxHQUFELEVBQU1DLE9BQU4sRUFBZUMsTUFBZixLQUEwQjtBQUNwRkosYUFBU0UsR0FBVCxFQUFjLElBQWQ7QUFDRCxHQUZEO0FBR0QsQ0FMRDs7QUFPQTtBQUNBLElBQUlHLGlCQUFpQixVQUFTQyxFQUFULEVBQWFDLEtBQWIsRUFBb0JDLEtBQXBCLEVBQTJCQyxJQUEzQixFQUFpQ0MsS0FBakMsRUFBd0NDLEdBQXhDLEVBQTZDO0FBQ2hFLFFBQU1WLFFBQVEsMEZBQWQ7QUFDQVgsYUFBV1csS0FBWCxDQUFpQkEsS0FBakIsRUFBd0IsQ0FBQ0ssRUFBRCxFQUFLQyxLQUFMLEVBQVlDLEtBQVosRUFBbUJDLElBQW5CLEVBQXlCQyxLQUF6QixFQUFnQ0MsR0FBaEMsQ0FBeEIsRUFBOEQsQ0FBQ1QsR0FBRCxFQUFNQyxPQUFOLEVBQWVDLE1BQWYsS0FBMEI7QUFDdEZKLGFBQVNFLEdBQVQsRUFBYyxJQUFkO0FBQ0QsR0FGRDtBQUdELENBTEQ7O0FBT0E7QUFDQSxJQUFJVSxnQkFBZ0IsVUFBU04sRUFBVCxFQUFhTyxXQUFiLEVBQTBCQyxVQUExQixFQUFzQ0MsR0FBdEMsRUFBMkNKLEdBQTNDLEVBQWdEO0FBQ2xFLFFBQU1WLFFBQVEsMEZBQWQ7QUFDQVgsYUFBV1csS0FBWCxDQUFpQkEsS0FBakIsRUFBd0IsQ0FBQ0ssRUFBRCxFQUFLTyxXQUFMLEVBQWtCQyxVQUFsQixFQUE4QkMsR0FBOUIsRUFBbUNKLEdBQW5DLENBQXhCLEVBQWlFLENBQUNULEdBQUQsRUFBTUMsT0FBTixFQUFlQyxNQUFmLEtBQTBCO0FBQ3pGSixhQUFTRSxHQUFULEVBQWMsSUFBZDtBQUNELEdBRkQ7QUFHRCxDQUxEOztBQVFBO0FBQ0FjLE9BQU9DLE9BQVAsQ0FBZXRCLGNBQWYsR0FBZ0NBLGNBQWhDO0FBQ0FxQixPQUFPQyxPQUFQLENBQWVaLGNBQWYsR0FBZ0NBLGNBQWhDO0FBQ0FXLE9BQU9DLE9BQVAsQ0FBZUwsYUFBZixHQUErQkEsYUFBL0IiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBteXNxbCA9IHJlcXVpcmUoJ215c3FsJyk7XG5jb25zdCBjb25uZWN0aW9uID0gbXlzcWwuY3JlYXRlQ29ubmVjdGlvbih7XG4gIGhvc3Q6ICdsb2NhbGhvc3QnLFxuICB1c2VyOiAncm9vdCcsXG4gIGRhdGFiYXNlOiAnY3VzdG9tZXJfZGF0YSdcbn0pO1xuXG4vLyB3cml0ZSBmdW5jdGlvbiB0byBhZGQgY3VzdG9tZXJfaW5mb1xudmFyIGluc2VydEN1c3RvbWVyID0gZnVuY3Rpb24oZmlyc3RfbmFtZSwgbGFzdF9uYW1lLCBlbWFpbCwgcHcsIGNhbGxiYWNrKSB7XG4gIGNvbnN0IHF1ZXJ5ID0gJ0lOU0VSVCBJTlRPIGN1c3RvbWVyX2luZm8gKGZpcnN0X25hbWUsIGxhc3RfbmFtZSwgZW1haWwsIHB3KSBWQUxVRVMgKD8sID8sID8sID8pJztcbiAgY29ubmVjdGlvbi5xdWVyeShxdWVyeSwgW2ZpcnN0X25hbWUsIGxhc3RfbmFtZSwgZW1haWwsIHB3XSwgKGVyciwgcmVzdWx0cywgZmllbGRzKSA9PiB7XG4gICAgY2FsbGJhY2soZXJyLCBudWxsKTtcbiAgfSk7XG59O1xuXG4vLyB3cml0ZSBmdW5jdGlvbiB0byBhZGQgc2hpcHBpbmdfaW5mb1xudmFyIGluc2VydFNoaXBwaW5nID0gZnVuY3Rpb24oaWQsIGxpbmUxLCBsaW5lMiwgY2l0eSwgc3RhdGUsIHppcCkge1xuICBjb25zdCBxdWVyeSA9ICdJTlNFUlQgSU5UTyBjdXN0b21lcl9pbmZvIChpZCwgbGluZTEsIGxpbmUyLCBjaXR5LCBzdGF0ZSwgemlwKSBWQUxVRVMgKD8sID8sID8sID8sID8sID8pJztcbiAgY29ubmVjdGlvbi5xdWVyeShxdWVyeSwgW2lkLCBsaW5lMSwgbGluZTIsIGNpdHksIHN0YXRlLCB6aXBdLCAoZXJyLCByZXN1bHRzLCBmaWVsZHMpID0+IHtcbiAgICBjYWxsYmFjayhlcnIsIG51bGwpO1xuICB9KTtcbn07XG5cbi8vIHdyaXRlIGZ1bmN0aW9uIHRvIGFkZCBwYXltZW50X2luZm9cbnZhciBpbnNlcnRQYXltZW50ID0gZnVuY3Rpb24oaWQsIGNhcmRfbnVtYmVyLCBleHBpcmF0aW9uLCBjdnYsIHppcCkge1xuICBjb25zdCBxdWVyeSA9ICdJTlNFUlQgSU5UTyBjdXN0b21lcl9pbmZvIChpZCwgY2FyZF9udW1iZXIsIGV4cGlyYXRpb24sIGN2diwgemlwKSBWQUxVRVMgKD8sID8sID8sID8sID8pJztcbiAgY29ubmVjdGlvbi5xdWVyeShxdWVyeSwgW2lkLCBjYXJkX251bWJlciwgZXhwaXJhdGlvbiwgY3Z2LCB6aXBdLCAoZXJyLCByZXN1bHRzLCBmaWVsZHMpID0+IHtcbiAgICBjYWxsYmFjayhlcnIsIG51bGwpO1xuICB9KTtcbn07XG5cblxuLy8gZXhwb3J0IGFsbCBmdW5jdGlvbnNcbm1vZHVsZS5leHBvcnRzLmluc2VydEN1c3RvbWVyID0gaW5zZXJ0Q3VzdG9tZXI7XG5tb2R1bGUuZXhwb3J0cy5pbnNlcnRTaGlwcGluZyA9IGluc2VydFNoaXBwaW5nO1xubW9kdWxlLmV4cG9ydHMuaW5zZXJ0UGF5bWVudCA9IGluc2VydFBheW1lbnQ7Il19