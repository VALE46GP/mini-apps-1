const mysql = require('mysql');
const connection = mysql.createConnection({
  host: 'localhost',
  user: 'root',
  database: 'customer_data'
});

// write a function to get customer_id
var getId = function (callback) {
  connection.query('SELECT id FROM customer_info ORDER BY id DESC LIMIT 1', (err, results, fields) => {
    if (err) {
      callback(err, null);
    } else {
      callback(null, results);
    }
  });
};

// write function to add customer_info
var insertCustomer = function (first_name, last_name, email, password, callback) {
  const query = 'INSERT INTO customer_info (first_name, last_name, email, password) VALUES (?, ?, ?)';
  connection.query(query, [first_name, last_name, email, password], (err, results, fields) => {
    callback(err, null);
  });
};

// write function to add shipping_info
// TODO: Get id from customer_data first
var insertShipping = function (id, line1, line2, city, state, zip) {
  const query = 'INSERT INTO customer_info (id, line1, line2, city, state, zip) VALUES (?, ?, ?, ?, ?, ?)';
  connection.query(query, [id, line1, line2, city, state, zip], (err, results, fields) => {
    callback(err, null);
  });
};

// write function to add payment_info
// TODO: Get id from customer_data first
var insertPayment = function (id, card_number, expiration, cvv, zip) {
  const query = 'INSERT INTO customer_info (id, card_number, expiration, cvv, zip) VALUES (?, ?, ?, ?, ?)';
  connection.query(query, [id, card_number, expiration, cvv, zip], (err, results, fields) => {
    callback(err, null);
  });
};

// export all functions
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2RhdGFiYXNlL2luZGV4LmpzIl0sIm5hbWVzIjpbIm15c3FsIiwicmVxdWlyZSIsImNvbm5lY3Rpb24iLCJjcmVhdGVDb25uZWN0aW9uIiwiaG9zdCIsInVzZXIiLCJkYXRhYmFzZSIsImdldElkIiwiY2FsbGJhY2siLCJxdWVyeSIsImVyciIsInJlc3VsdHMiLCJmaWVsZHMiLCJpbnNlcnRDdXN0b21lciIsImZpcnN0X25hbWUiLCJsYXN0X25hbWUiLCJlbWFpbCIsInBhc3N3b3JkIiwiaW5zZXJ0U2hpcHBpbmciLCJpZCIsImxpbmUxIiwibGluZTIiLCJjaXR5Iiwic3RhdGUiLCJ6aXAiLCJpbnNlcnRQYXltZW50IiwiY2FyZF9udW1iZXIiLCJleHBpcmF0aW9uIiwiY3Z2Il0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxRQUFRQyxRQUFRLE9BQVIsQ0FBZDtBQUNBLE1BQU1DLGFBQWFGLE1BQU1HLGdCQUFOLENBQXVCO0FBQ3hDQyxRQUFNLFdBRGtDO0FBRXhDQyxRQUFNLE1BRmtDO0FBR3hDQyxZQUFVO0FBSDhCLENBQXZCLENBQW5COztBQU1BO0FBQ0EsSUFBSUMsUUFBUSxVQUFTQyxRQUFULEVBQW1CO0FBQzdCTixhQUFXTyxLQUFYLENBQWlCLHVEQUFqQixFQUEwRSxDQUFDQyxHQUFELEVBQU1DLE9BQU4sRUFBZUMsTUFBZixLQUEwQjtBQUNsRyxRQUFJRixHQUFKLEVBQVM7QUFDUEYsZUFBU0UsR0FBVCxFQUFjLElBQWQ7QUFDRCxLQUZELE1BRU87QUFDTEYsZUFBUyxJQUFULEVBQWVHLE9BQWY7QUFDRDtBQUNGLEdBTkQ7QUFPRCxDQVJEOztBQVVBO0FBQ0EsSUFBSUUsaUJBQWlCLFVBQVNDLFVBQVQsRUFBcUJDLFNBQXJCLEVBQWdDQyxLQUFoQyxFQUF1Q0MsUUFBdkMsRUFBaURULFFBQWpELEVBQTJEO0FBQzlFLFFBQU1DLFFBQVEscUZBQWQ7QUFDQVAsYUFBV08sS0FBWCxDQUFpQkEsS0FBakIsRUFBd0IsQ0FBQ0ssVUFBRCxFQUFhQyxTQUFiLEVBQXdCQyxLQUF4QixFQUErQkMsUUFBL0IsQ0FBeEIsRUFBa0UsQ0FBQ1AsR0FBRCxFQUFNQyxPQUFOLEVBQWVDLE1BQWYsS0FBMEI7QUFDMUZKLGFBQVNFLEdBQVQsRUFBYyxJQUFkO0FBQ0QsR0FGRDtBQUdELENBTEQ7O0FBT0E7QUFDQTtBQUNBLElBQUlRLGlCQUFpQixVQUFTQyxFQUFULEVBQWFDLEtBQWIsRUFBb0JDLEtBQXBCLEVBQTJCQyxJQUEzQixFQUFpQ0MsS0FBakMsRUFBd0NDLEdBQXhDLEVBQTZDO0FBQ2hFLFFBQU1mLFFBQVEsMEZBQWQ7QUFDQVAsYUFBV08sS0FBWCxDQUFpQkEsS0FBakIsRUFBd0IsQ0FBQ1UsRUFBRCxFQUFLQyxLQUFMLEVBQVlDLEtBQVosRUFBbUJDLElBQW5CLEVBQXlCQyxLQUF6QixFQUFnQ0MsR0FBaEMsQ0FBeEIsRUFBOEQsQ0FBQ2QsR0FBRCxFQUFNQyxPQUFOLEVBQWVDLE1BQWYsS0FBMEI7QUFDdEZKLGFBQVNFLEdBQVQsRUFBYyxJQUFkO0FBQ0QsR0FGRDtBQUdELENBTEQ7O0FBT0E7QUFDQTtBQUNBLElBQUllLGdCQUFnQixVQUFTTixFQUFULEVBQWFPLFdBQWIsRUFBMEJDLFVBQTFCLEVBQXNDQyxHQUF0QyxFQUEyQ0osR0FBM0MsRUFBZ0Q7QUFDbEUsUUFBTWYsUUFBUSwwRkFBZDtBQUNBUCxhQUFXTyxLQUFYLENBQWlCQSxLQUFqQixFQUF3QixDQUFDVSxFQUFELEVBQUtPLFdBQUwsRUFBa0JDLFVBQWxCLEVBQThCQyxHQUE5QixFQUFtQ0osR0FBbkMsQ0FBeEIsRUFBaUUsQ0FBQ2QsR0FBRCxFQUFNQyxPQUFOLEVBQWVDLE1BQWYsS0FBMEI7QUFDekZKLGFBQVNFLEdBQVQsRUFBYyxJQUFkO0FBQ0QsR0FGRDtBQUdELENBTEQ7O0FBUUEiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBteXNxbCA9IHJlcXVpcmUoJ215c3FsJyk7XG5jb25zdCBjb25uZWN0aW9uID0gbXlzcWwuY3JlYXRlQ29ubmVjdGlvbih7XG4gIGhvc3Q6ICdsb2NhbGhvc3QnLFxuICB1c2VyOiAncm9vdCcsXG4gIGRhdGFiYXNlOiAnY3VzdG9tZXJfZGF0YSdcbn0pO1xuXG4vLyB3cml0ZSBhIGZ1bmN0aW9uIHRvIGdldCBjdXN0b21lcl9pZFxudmFyIGdldElkID0gZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgY29ubmVjdGlvbi5xdWVyeSgnU0VMRUNUIGlkIEZST00gY3VzdG9tZXJfaW5mbyBPUkRFUiBCWSBpZCBERVNDIExJTUlUIDEnLCAoZXJyLCByZXN1bHRzLCBmaWVsZHMpID0+IHtcbiAgICBpZiAoZXJyKSB7XG4gICAgICBjYWxsYmFjayhlcnIsIG51bGwpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjYWxsYmFjayhudWxsLCByZXN1bHRzKTtcbiAgICB9XG4gIH0pO1xufTtcblxuLy8gd3JpdGUgZnVuY3Rpb24gdG8gYWRkIGN1c3RvbWVyX2luZm9cbnZhciBpbnNlcnRDdXN0b21lciA9IGZ1bmN0aW9uKGZpcnN0X25hbWUsIGxhc3RfbmFtZSwgZW1haWwsIHBhc3N3b3JkLCBjYWxsYmFjaykge1xuICBjb25zdCBxdWVyeSA9ICdJTlNFUlQgSU5UTyBjdXN0b21lcl9pbmZvIChmaXJzdF9uYW1lLCBsYXN0X25hbWUsIGVtYWlsLCBwYXNzd29yZCkgVkFMVUVTICg/LCA/LCA/KSc7XG4gIGNvbm5lY3Rpb24ucXVlcnkocXVlcnksIFtmaXJzdF9uYW1lLCBsYXN0X25hbWUsIGVtYWlsLCBwYXNzd29yZF0sIChlcnIsIHJlc3VsdHMsIGZpZWxkcykgPT4ge1xuICAgIGNhbGxiYWNrKGVyciwgbnVsbCk7XG4gIH0pO1xufTtcblxuLy8gd3JpdGUgZnVuY3Rpb24gdG8gYWRkIHNoaXBwaW5nX2luZm9cbi8vIFRPRE86IEdldCBpZCBmcm9tIGN1c3RvbWVyX2RhdGEgZmlyc3RcbnZhciBpbnNlcnRTaGlwcGluZyA9IGZ1bmN0aW9uKGlkLCBsaW5lMSwgbGluZTIsIGNpdHksIHN0YXRlLCB6aXApIHtcbiAgY29uc3QgcXVlcnkgPSAnSU5TRVJUIElOVE8gY3VzdG9tZXJfaW5mbyAoaWQsIGxpbmUxLCBsaW5lMiwgY2l0eSwgc3RhdGUsIHppcCkgVkFMVUVTICg/LCA/LCA/LCA/LCA/LCA/KSc7XG4gIGNvbm5lY3Rpb24ucXVlcnkocXVlcnksIFtpZCwgbGluZTEsIGxpbmUyLCBjaXR5LCBzdGF0ZSwgemlwXSwgKGVyciwgcmVzdWx0cywgZmllbGRzKSA9PiB7XG4gICAgY2FsbGJhY2soZXJyLCBudWxsKTtcbiAgfSk7XG59O1xuXG4vLyB3cml0ZSBmdW5jdGlvbiB0byBhZGQgcGF5bWVudF9pbmZvXG4vLyBUT0RPOiBHZXQgaWQgZnJvbSBjdXN0b21lcl9kYXRhIGZpcnN0XG52YXIgaW5zZXJ0UGF5bWVudCA9IGZ1bmN0aW9uKGlkLCBjYXJkX251bWJlciwgZXhwaXJhdGlvbiwgY3Z2LCB6aXApIHtcbiAgY29uc3QgcXVlcnkgPSAnSU5TRVJUIElOVE8gY3VzdG9tZXJfaW5mbyAoaWQsIGNhcmRfbnVtYmVyLCBleHBpcmF0aW9uLCBjdnYsIHppcCkgVkFMVUVTICg/LCA/LCA/LCA/LCA/KSc7XG4gIGNvbm5lY3Rpb24ucXVlcnkocXVlcnksIFtpZCwgY2FyZF9udW1iZXIsIGV4cGlyYXRpb24sIGN2diwgemlwXSwgKGVyciwgcmVzdWx0cywgZmllbGRzKSA9PiB7XG4gICAgY2FsbGJhY2soZXJyLCBudWxsKTtcbiAgfSk7XG59O1xuXG5cbi8vIGV4cG9ydCBhbGwgZnVuY3Rpb25zIl19